filter(nacionalidade == nac) %>%
pull(idades)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's' # 's' para padrão (show axis)
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
#item 5
par(mfrow = c(1, 6))
nacionalidades_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidades_unicas)) {
nac <- nacionalidades_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idades)
if (i == 1) {
ylab_text <- "Idade"
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
yaxt_setting <- 's'
par(mfrow = c(1, 6))
nacionalidades_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidades_unicas)) {
nac <- nacionalidades_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idades)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1, 6))
nacionalidades_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidades_unicas)) {
nac <- nacionalidades_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idades)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
#Questão 2
idade <- c(28, 34, 46, 26, 37, 29, 51, 31, 39, 43, 58, 44, 25, 23, 52, 42, 48, 33, 38, 46)
#Nacionalidade: italiana, inglesa, belga, espanhola, francesa, alemana
nacionalidade <- c("Italiana", "Inglesa", "Belga", "Espanhola", "Italiana", "Espanhola", "Francesa", "Belga", "Italiana", "Italiana", "Italiana", "Inglesa", "Francesa", "Espanhola", "Italiana", "Alemana", "Francesa", "Italiana", "Alemana", "Italiana"
)
renda <- c(2.3, 1.6, 1.2, 0.9, 2.1, 1.6, 1.8, 1.4, 1.2, 2.8, 3.4, 2.7, 1.6, 1.2, 1.1, 2.5, 2.0, 1.7, 2.1, 3.2)
experiencia <- c(2, 8, 21, 1, 15, 3, 28, 5, 13, 20, 32, 23, 1, 0, 29, 18, 19, 7, 12, 23)
curriculos <- data.frame(idade, nacionalidade, renda, experiencia)
# Estatísticas descritivas
#item 1
#Informações
Informações <- c("Idade", "Renda", "Experiência")
#Medias
media_idade <- mean(idade)
media_Renda <- mean(renda)
media_Experiencia <- mean(experiencia)
Media <- c(media_idade, media_Renda, media_Experiencia)
#Medianas
mediana_idade <- median(idade)
mediana_Renda <- median(renda)
mediana_Experiencia <- median(experiencia)
Mediana <- c(mediana_idade, mediana_Renda, mediana_Experiencia)
#Desvio padrão
desvio_idade <- sd(idade)
desvio_Renda <- sd(renda)
desvio_Experiencia <- sd(experiencia)
Desvio_Padrão <- c(desvio_idade, desvio_Renda, desvio_Experiencia)
estatisticas = data.frame(Informações,Media, Mediana, Desvio_Padrão)
print(estatisticas)
#item 2
library(dplyr)
library(tidyverse)
grupos_nacionalidade <- curriculos %>%
group_by(nacionalidade) %>%       # agrupa por nacionalidade
summarise(
Renda_media = mean(renda),
Experiencia_media = mean(experiencia)
)
cat("Tabela completa:\n")
print(grupos_nacionalidade)
maior_renda <- grupos_nacionalidade %>%
slice_max(Renda_media)%>%
pull(nacionalidade)
cat("\nNacionalidade com maior renda média desejada:\n")
print(maior_renda)
mais_experiente <- grupos_nacionalidade %>%
slice_max(Experiencia_media) %>%
pull(nacionalidade)
cat("Nacionalidade que aparenta ser mais experiente:")
print(mais_experiente)
#item3
coeficienteP <- cor(experiencia, renda)
coeficienteP
ggplot(curriculos, aes(x = experiencia, y = renda)) +
geom_point(color = "blue", size = 3) +
geom_smooth(method = "lm", color = "red") + # linha de regressão
labs(title = "Gráfico de Dispersão",
x = "Experiência",
y = "Renda desejada") +
theme_minimal()
#item 4
prioridade <- curriculos %>%
select(idade, nacionalidade)%>%
filter(experiencia>10, renda<2) %>%
pull(idade)
print("Idade e nacionalidade dos candidatos que atendem aos critérios de prioridade:\n")
print(prioridade)
print("Número de candidatos que atendem aos critérios de prioridade:")
print(nrow(prioridade))
# item 5
#idade
par(mfrow = c(1, 6))
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idade)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
#RENDAS
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
#RENDAS
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
# item 5
#idade
par(mfrow = c(1, 6))
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idade)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
#RENDAS
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
# item 5
#idade
par(mfrow = c(1, 6))
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idade)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
#RENDAS
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
# item 5
#idade
par(mfrow = c(1, 6))
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idade)
if (i == 1) {
ylab_text <- "Idade"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60), # Define o mesmo limite para comparação
yaxt = yaxt_setting)
}
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(0,4) # Define o mesmo limite para comparação
yaxt = yaxt_setting)
par(mfrow = c(1,6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(renda)
if (i == 1) {
ylab_text <- "Renda"
yaxt_setting <- 's'
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(0,4) # Define o mesmo limite para comparação
yaxt = yaxt_setting)
# Reverte o layout do gráfico para o padrão de 1 gráfico por tela
par(mfrow = c(1, 1))
# item 5
# Garante que o pacote dplyr está carregado
library(dplyr)
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
# ----------------------------------------------------------------------
# BLOCO 1: BOX-PLOTS PARA IDADES
# ----------------------------------------------------------------------
# Define o layout para a primeira linha de gráficos (Idade)
par(mfrow = c(1, 6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
# ***CORREÇÃO 1: Usando o nome correto da coluna (idades)***
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idades)
# ***CORREÇÃO 2: Adicionando o bloco ELSE para limpar o eixo Y nos gráficos 2-6***
if (i == 1) {
ylab_text <- "Idade (Anos)"
yaxt_setting <- 's' # 's' = Show axis (Mostrar eixo)
} else {
ylab_text <- ""
yaxt_setting <- 'n' # 'n' = No axis (Não mostrar eixo)
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60),
yaxt = yaxt_setting)
}
# item 5
# Garante que o pacote dplyr está carregado
library(dplyr)
nacionalidade_unicas <- unique(curriculos$nacionalidade)
cores <- c("lightgreen", "skyblue", "gold", "red", "violet", "gray")
# ----------------------------------------------------------------------
# BLOCO 1: BOX-PLOTS PARA IDADES
# ----------------------------------------------------------------------
# Define o layout para a primeira linha de gráficos (Idade)
par(mfrow = c(1, 6))
for (i in 1:length(nacionalidade_unicas)) {
nac <- nacionalidade_unicas[i]
# ***CORREÇÃO 1: Usando o nome correto da coluna (idades)***
dados_filtrados <- curriculos %>%
filter(nacionalidade == nac) %>%
pull(idades)
# ***CORREÇÃO 2: Adicionando o bloco ELSE para limpar o eixo Y nos gráficos 2-6***
if (i == 1) {
ylab_text <- "Idade (Anos)"
yaxt_setting <- 's' # 's' = Show axis (Mostrar eixo)
} else {
ylab_text <- ""
yaxt_setting <- 'n' # 'n' = No axis (Não mostrar eixo)
}
boxplot(dados_filtrados,
main = nac,
ylab = ylab_text,
col = cores[i],
border = "black",
ylim = c(20, 60),
yaxt = yaxt_setting)
}
